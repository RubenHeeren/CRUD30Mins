@page "/create"

<h1>Creating post "@_postToCreate.Title"</h1>

<EditForm Model="_postToCreate" OnValidSubmit="CreatePostAsync">
    <div class="form-group mb-3">
        <label for="postTitle">Title</label>
        <InputText @bind-Value="_postToCreate.Title" class="form-control" id="postTitle" />
    </div>

    <div class="form-group mb-3">
        <label for="postContent">Content</label>
        <InputText @bind-Value="_postToCreate.Content" class="form-control" id="postContent" />
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">
        Create
    </button>

    <button @onclick="@(() => NavigationManager.NavigateTo("/"))" class="btn btn-secondary">
        Cancel
    </button>
</EditForm>

@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@code {
    private Post _postToCreate = new Post
    {
        Title = "Post title",
        Content = "Post content"
    };

    private async Task CreatePostAsync()
    {
        using var context = new CRUD30MinsDbContext();
        await context.Posts.AddAsync(_postToCreate);

        if (await context.SaveChangesAsync() > 0)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            string errorMessage = "ERROR: Failed to create post.";
            await JsRuntime.InvokeVoidAsync("alert", errorMessage);
        }
    }
}

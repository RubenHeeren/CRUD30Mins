@page "/update/{PostId:int}"

<h1>Creating post "@_postToUpdate.Title"</h1>

<EditForm Model="_postToUpdate" OnValidSubmit="UpdatePostAsync">
    <div class="form-group mb-3">
        <label for="postTitle">Title</label>
        <InputText @bind-Value="_postToUpdate.Title" class="form-control" id="postTitle" />
    </div>

    <div class="form-group mb-3">
        <label for="postContent">Content</label>
        <InputText @bind-Value="_postToUpdate.Content" class="form-control" id="postContent" />
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />

    <button class="btn btn-success" type="submit">
        Update
    </button>

    <button @onclick="@(() => NavigationManager.NavigateTo("/"))" class="btn btn-secondary">
        Cancel
    </button>
</EditForm>

@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager
@code {
    [Parameter] public int PostId { get; set; }

    private Post _postToUpdate = null;

    protected override async Task OnParametersSetAsync()
    {
        using var context = new CRUD30MinsDbContext();
        _postToUpdate = await context.Posts.FindAsync(PostId);
    }

    private async Task UpdatePostAsync()
    {
        using var context = new CRUD30MinsDbContext();
        context.Posts.Update(_postToUpdate);

        if (await context.SaveChangesAsync() > 0)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            string errorMessage = "ERROR: Failed to update post.";
            await JsRuntime.InvokeVoidAsync("alert", errorMessage);
        }
    }
}
